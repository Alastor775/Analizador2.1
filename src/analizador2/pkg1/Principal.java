/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analizador2.pkg1;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import static java.util.regex.Pattern.matches;

/**
 *
 * @author Alastor
 */
public class Principal extends javax.swing.JFrame {

    // Estado actual.
    private int estado = 0;
    // Posición actual con respecto al editor.
    private int posicion = 0;
    // Representa el texto fuente del análisis.
    private String fuente = "";
    // Se analizará carácter por carácter el String fuente. 'caracter'
    // representará el simbolo.
    private char caracter;
    // Es el carácter o conjunto de caracteres que representan una 
    // acción, atributo, etc. en el lenguaje.
    private String lexema = "";

    // Lista completa de lexemas encontradas en el String fuente.
    private ArrayList<String> listaLexema = new ArrayList();
    // Indica que tipo de lexema se encuentra en la lista lexema.
    // los atributos estan ordenados: 
    // listaLexema(i) es de tipo listaToken(i)
    private ArrayList<String> listaToken = new ArrayList();

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ENTRADA = new javax.swing.JTextPane();
        Entrada = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        SALIDA = new javax.swing.JTextPane();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jScrollPane1.setViewportView(ENTRADA);

        Entrada.setText("Analizar");
        Entrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntradaActionPerformed(evt);
            }
        });

        limpiar.setText("Limpiar");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(SALIDA);

        jButton3.setText("Salir");

        jLabel1.setFont(new java.awt.Font("Engravers MT", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Analizador lexico");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(Entrada)
                        .addGap(192, 192, 192)
                        .addComponent(limpiar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(limpiar)
                    .addComponent(Entrada))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntradaActionPerformed
        estado = 0;
        posicion = 0;
        lexema = "";
        String fuente;
        fuente = ENTRADA.getText();
        fuente = fuente.trim();
        if (fuente.length() == 0) {
            SALIDA.setText("El cuadro de entrada no contiene\ncaracteres a" + " evaluar. ");
        } else {
            //iniciarProceso();
            //imprimirLista();
            
            analizarIdentifiador();
           // separarpalabras();
        }

        //analizarIdentifiador();
    }//GEN-LAST:event_EntradaActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        ENTRADA.setText("");
        SALIDA.setText("");

    }//GEN-LAST:event_limpiarActionPerformed
    private void iniciarProceso() {
       
       
    }

    private boolean esEspacio(char c) {
        return c == '\n' || c == '\t' || c == ' ';
    }

    public void analizarIdentifiador() {
        /*Pattern numeros = Pattern.compile("[0-9]+");//expresion regular de NUMERO
        Pattern identificador = Pattern.compile("[A-Za-z]+");//expresion regular DE IDENTIFICADORES
        Pattern reservadas = Pattern.compile("[hola | yei | sexi]+");//expresion regular DE RESERVADAS
        Pattern Decimal = Pattern.compile("\\d+\\.\\d+");//expresion regular de DECIMALES
        Pattern ErrorDecimal = Pattern.compile("\\d+\\.\\d+\\.\\d+"); //expresion regular de 
        Pattern ErrorLetra1 = Pattern.compile("[0-9A-Za-z]+");//expresion regular de indentificaor mal
        Pattern ErrorReservada = Pattern.compile("[0-9]+[hola| yei| sexi]+");//expresion regular de error de reservadas
        Pattern ErrorIndentifiador = Pattern.compile("[0-9]+[A-Za-z]+");//expresion de error de identificador
        */
        String  cadenaUno="";
        cadenaUno = ENTRADA.getText();
        cadenaUno = cadenaUno.trim();
        
        //boolean result = mat.matches();
        //String[] subs = cadenaUno.split(" "); 
      
        String salida2 ="";    
        String[] split = cadenaUno.split("    ");
        //se crea un patron con expresiones regulares
      
        for (int i = 0; i < split.length; i++) {
            Pattern patron = Pattern.compile("(while|sexi|caso|descanso|si|para)|" //reservadas         ------    gropu(1) listo
                + "([a-zA-Z]+)|"
                + "([A-Za-z]+[0-9]9)|"                                           //identificadores    ------    gropu(2) listo
                + "([>|<|=|+|-|*|/]+)|"                                    //operadores         ------    gropu(3) listo
                + "([0-9]+[.]+[0-9]+[.]+[0-9]+)|"                        //error decimal        ------    gropu(4) listo
                + "([0-9]+[.]+[0-9])|"                                     //decimal            ------    gropu(5) listo
                + "([0-9]+[A-Za-z]+)|"                                     //errorIdentificador ------    gropu(6) listo
                + "([{|}]+)|"                                              //simbolos           ------    gropu(7)
                + "(;)");                                                  //punto y coma       ------    gropu(8)
                Matcher mat = patron.matcher(cadenaUno);//comparacion de 
        
            int n = 0;
            while(mat.find()){
                String tokentipo1 = mat.group(1);
                if(tokentipo1 != null){
//                    SALIDA.setText("es una reservada ->"+split[i]);
                    salida2 += ("es una reservada      ->   "+"   [ "+ tokentipo1+" ]"+"\n");
                    n=split.length;
                }
                String tokentipo2 = mat.group(2);
                if(tokentipo2 != null){
                    //SALIDA.setText("es un identificador ->  "+split[i]);
                    salida2 += ("es una identificador   ->   "+"   [ "+ tokentipo2+" ]"+"\n");
                    n=split.length;
                }
                String tokentipo3 = mat.group(3);
                if(tokentipo3 != null){
                   //SALIDA.setText("es  operador ->  "+split[i]);
                    salida2 += ("es un operador        ->   "+"   [ "+ tokentipo3+" ]"+"\n");
                    n=split.length;
                }
                String tokentipo4 = mat.group(4);
                if(tokentipo4 != null){
                    //SALIDA.setText("es un decimal ->  "+split[i]);
                     salida2 += ("error no puedes poner digito . digito . digito ->   "+"   [ "+ tokentipo4+" ]"+"\n");
                     n=split.length;
                }    
                String tokentipo5 = mat.group(5);
                if(tokentipo5 != null){
                    //SALIDA.setText("es un numero ->  "+split[i]);
                     salida2 += ("es un decimal        ->   "+"   [ "+ tokentipo5+" ]"+"\n");
                     n=split.length;
                }
                String tokentipo6 = mat.group(6);
                if(tokentipo6 != null){
                    //SALIDA.setText("Error! no puedes poner otro punto despues de hacer un decimal ->  "+split[i]);
                     salida2+= ("Error! no puedes poner un numero antes que la letral ->   "+"   [ "+ tokentipo6+" ]"+"\n");
                     n=split.length;
                }
                String tokentipo7 = mat.group(7);
                if(tokentipo7 != null){
                    //SALIDA.setText("Error! no puedes poner dos puntos en un decimal ->  "+split[i]);
                     salida2+= ("Es un simbolo         ->   "+ "   [ "+ tokentipo7+" ]"+"\n");
                     n=split.length;
                }
                String tokentipo8 = mat.group(8);
                if(tokentipo8 != null){
                    //SALIDA.setText("Error! no puedes poner dos puntos en un decimal ->  "+split[i]);
                     salida2+= ("Punto y Coma          ->   "+ "   [ "+ tokentipo8+" ]"+"\n");
                     n=split.length;
                }
            }
            for(int j = 0; j < n; j++) {
                    split[j] = " ";
            }
                
           
        }
        
        SALIDA.setText(salida2);
        
         
        

    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane ENTRADA;
    private javax.swing.JButton Entrada;
    private javax.swing.JTextPane SALIDA;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton limpiar;
    // End of variables declaration//GEN-END:variables
}
